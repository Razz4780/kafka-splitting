get pre update
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '3'
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"py-serv"},"name":"py-serv-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"py-serv"}},"template":{"metadata":{"labels":{"app":"py-serv"}},"spec":{"containers":[{"env":[{"name":"MIRRORD_FAKE_VAR_FIRST","value":"mirrord.is.running"},{"name":"MIRRORD_FAKE_VAR_SECOND","value":"7777"}],"image":"ghcr.io/metalbear-co/mirrord-pytest:latest","name":"py-serv","ports":[{"containerPort":80}]}]}}}}
  creationTimestamp: 2024-08-26T08:21:28Z
  generation: 3
  labels:
    app: py-serv
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    .: {}
                    f:name: {}
                  k:{"name":"MIRRORD_FAKE_VAR_SECOND"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":80,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: 2024-08-26T08:21:28Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                f:env:
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    f:value: {}
    manager: dupa
    operation: Update
    time: 2024-08-28T10:41:13Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: 2024-08-28T10:41:16Z
  name: py-serv-deployment
  namespace: default
  resourceVersion: '68882'
  uid: b8dfd548-6e7e-46a8-a6ad-b9d8f1918b9c
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: py-serv
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: py-serv
    spec:
      containers:
      - env:
        - name: MIRRORD_FAKE_VAR_FIRST
          value: '239733140'
        - name: MIRRORD_FAKE_VAR_SECOND
          value: '7777'
        image: ghcr.io/metalbear-co/mirrord-pytest:latest
        imagePullPolicy: Always
        name: py-serv
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2024-08-28T10:13:55Z
    lastUpdateTime: 2024-08-28T10:13:55Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: 'True'
    type: Available
  - lastTransitionTime: 2024-08-26T08:21:28Z
    lastUpdateTime: 2024-08-28T10:41:16Z
    message: ReplicaSet "py-serv-deployment-fd676db45" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: 'True'
    type: Progressing
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1



init applied
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '3'
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"py-serv"},"name":"py-serv-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"py-serv"}},"template":{"metadata":{"labels":{"app":"py-serv"}},"spec":{"containers":[{"env":[{"name":"MIRRORD_FAKE_VAR_FIRST","value":"mirrord.is.running"},{"name":"MIRRORD_FAKE_VAR_SECOND","value":"7777"}],"image":"ghcr.io/metalbear-co/mirrord-pytest:latest","name":"py-serv","ports":[{"containerPort":80}]}]}}}}
  creationTimestamp: 2024-08-26T08:21:28Z
  generation: 3
  labels:
    app: py-serv
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    .: {}
                    f:name: {}
                  k:{"name":"MIRRORD_FAKE_VAR_SECOND"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":80,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: 2024-08-26T08:21:28Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                f:env:
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    f:value: {}
    manager: dupa
    operation: Update
    time: 2024-08-28T10:41:13Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: 2024-08-28T10:41:16Z
  name: py-serv-deployment
  namespace: default
  resourceVersion: '68882'
  uid: b8dfd548-6e7e-46a8-a6ad-b9d8f1918b9c
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: py-serv
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: py-serv
    spec:
      containers:
      - env:
        - name: MIRRORD_FAKE_VAR_FIRST
          value: '239733140'
        - name: MIRRORD_FAKE_VAR_SECOND
          value: '7777'
        image: ghcr.io/metalbear-co/mirrord-pytest:latest
        imagePullPolicy: Always
        name: py-serv
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2024-08-28T10:13:55Z
    lastUpdateTime: 2024-08-28T10:13:55Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: 'True'
    type: Available
  - lastTransitionTime: 2024-08-26T08:21:28Z
    lastUpdateTime: 2024-08-28T10:41:16Z
    message: ReplicaSet "py-serv-deployment-fd676db45" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: 'True'
    type: Progressing
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1



ret from patch
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '3'
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"py-serv"},"name":"py-serv-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"py-serv"}},"template":{"metadata":{"labels":{"app":"py-serv"}},"spec":{"containers":[{"env":[{"name":"MIRRORD_FAKE_VAR_FIRST","value":"mirrord.is.running"},{"name":"MIRRORD_FAKE_VAR_SECOND","value":"7777"}],"image":"ghcr.io/metalbear-co/mirrord-pytest:latest","name":"py-serv","ports":[{"containerPort":80}]}]}}}}
  creationTimestamp: 2024-08-26T08:21:28Z
  generation: 4
  labels:
    app: py-serv
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    .: {}
                    f:name: {}
                  k:{"name":"MIRRORD_FAKE_VAR_SECOND"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":80,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: 2024-08-26T08:21:28Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: 2024-08-28T10:41:16Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                f:env:
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    f:value: {}
    manager: dupa
    operation: Update
    time: 2024-08-28T10:44:19Z
  name: py-serv-deployment
  namespace: default
  resourceVersion: '69130'
  uid: b8dfd548-6e7e-46a8-a6ad-b9d8f1918b9c
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: py-serv
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: py-serv
    spec:
      containers:
      - env:
        - name: MIRRORD_FAKE_VAR_FIRST
          value: '2645284687'
        - name: MIRRORD_FAKE_VAR_SECOND
          value: '7777'
        image: ghcr.io/metalbear-co/mirrord-pytest:latest
        imagePullPolicy: Always
        name: py-serv
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2024-08-28T10:13:55Z
    lastUpdateTime: 2024-08-28T10:13:55Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: 'True'
    type: Available
  - lastTransitionTime: 2024-08-26T08:21:28Z
    lastUpdateTime: 2024-08-28T10:41:16Z
    message: ReplicaSet "py-serv-deployment-fd676db45" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: 'True'
    type: Progressing
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1



applied
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '3'
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"py-serv"},"name":"py-serv-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"py-serv"}},"template":{"metadata":{"labels":{"app":"py-serv"}},"spec":{"containers":[{"env":[{"name":"MIRRORD_FAKE_VAR_FIRST","value":"mirrord.is.running"},{"name":"MIRRORD_FAKE_VAR_SECOND","value":"7777"}],"image":"ghcr.io/metalbear-co/mirrord-pytest:latest","name":"py-serv","ports":[{"containerPort":80}]}]}}}}
  creationTimestamp: 2024-08-26T08:21:28Z
  generation: 4
  labels:
    app: py-serv
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    .: {}
                    f:name: {}
                  k:{"name":"MIRRORD_FAKE_VAR_SECOND"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":80,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: 2024-08-26T08:21:28Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: 2024-08-28T10:41:16Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                f:env:
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    f:value: {}
    manager: dupa
    operation: Update
    time: 2024-08-28T10:44:19Z
  name: py-serv-deployment
  namespace: default
  resourceVersion: '69130'
  uid: b8dfd548-6e7e-46a8-a6ad-b9d8f1918b9c
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: py-serv
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: py-serv
    spec:
      containers:
      - env:
        - name: MIRRORD_FAKE_VAR_FIRST
          value: '2645284687'
        - name: MIRRORD_FAKE_VAR_SECOND
          value: '7777'
        image: ghcr.io/metalbear-co/mirrord-pytest:latest
        imagePullPolicy: Always
        name: py-serv
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2024-08-28T10:13:55Z
    lastUpdateTime: 2024-08-28T10:13:55Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: 'True'
    type: Available
  - lastTransitionTime: 2024-08-26T08:21:28Z
    lastUpdateTime: 2024-08-28T10:41:16Z
    message: ReplicaSet "py-serv-deployment-fd676db45" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: 'True'
    type: Progressing
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1



applied
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '4'
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"py-serv"},"name":"py-serv-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"py-serv"}},"template":{"metadata":{"labels":{"app":"py-serv"}},"spec":{"containers":[{"env":[{"name":"MIRRORD_FAKE_VAR_FIRST","value":"mirrord.is.running"},{"name":"MIRRORD_FAKE_VAR_SECOND","value":"7777"}],"image":"ghcr.io/metalbear-co/mirrord-pytest:latest","name":"py-serv","ports":[{"containerPort":80}]}]}}}}
  creationTimestamp: 2024-08-26T08:21:28Z
  generation: 4
  labels:
    app: py-serv
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    .: {}
                    f:name: {}
                  k:{"name":"MIRRORD_FAKE_VAR_SECOND"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":80,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: 2024-08-26T08:21:28Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                f:env:
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    f:value: {}
    manager: dupa
    operation: Update
    time: 2024-08-28T10:44:19Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: 2024-08-28T10:44:19Z
  name: py-serv-deployment
  namespace: default
  resourceVersion: '69133'
  uid: b8dfd548-6e7e-46a8-a6ad-b9d8f1918b9c
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: py-serv
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: py-serv
    spec:
      containers:
      - env:
        - name: MIRRORD_FAKE_VAR_FIRST
          value: '2645284687'
        - name: MIRRORD_FAKE_VAR_SECOND
          value: '7777'
        image: ghcr.io/metalbear-co/mirrord-pytest:latest
        imagePullPolicy: Always
        name: py-serv
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2024-08-28T10:13:55Z
    lastUpdateTime: 2024-08-28T10:13:55Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: 'True'
    type: Available
  - lastTransitionTime: 2024-08-26T08:21:28Z
    lastUpdateTime: 2024-08-28T10:44:19Z
    message: Created new replica set "py-serv-deployment-b896ff5b9"
    reason: NewReplicaSetCreated
    status: 'True'
    type: Progressing
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1



applied
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '4'
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"py-serv"},"name":"py-serv-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"py-serv"}},"template":{"metadata":{"labels":{"app":"py-serv"}},"spec":{"containers":[{"env":[{"name":"MIRRORD_FAKE_VAR_FIRST","value":"mirrord.is.running"},{"name":"MIRRORD_FAKE_VAR_SECOND","value":"7777"}],"image":"ghcr.io/metalbear-co/mirrord-pytest:latest","name":"py-serv","ports":[{"containerPort":80}]}]}}}}
  creationTimestamp: 2024-08-26T08:21:28Z
  generation: 4
  labels:
    app: py-serv
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    .: {}
                    f:name: {}
                  k:{"name":"MIRRORD_FAKE_VAR_SECOND"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":80,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: 2024-08-26T08:21:28Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                f:env:
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    f:value: {}
    manager: dupa
    operation: Update
    time: 2024-08-28T10:44:19Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:unavailableReplicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: 2024-08-28T10:44:19Z
  name: py-serv-deployment
  namespace: default
  resourceVersion: '69138'
  uid: b8dfd548-6e7e-46a8-a6ad-b9d8f1918b9c
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: py-serv
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: py-serv
    spec:
      containers:
      - env:
        - name: MIRRORD_FAKE_VAR_FIRST
          value: '2645284687'
        - name: MIRRORD_FAKE_VAR_SECOND
          value: '7777'
        image: ghcr.io/metalbear-co/mirrord-pytest:latest
        imagePullPolicy: Always
        name: py-serv
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2024-08-28T10:13:55Z
    lastUpdateTime: 2024-08-28T10:13:55Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: 'True'
    type: Available
  - lastTransitionTime: 2024-08-26T08:21:28Z
    lastUpdateTime: 2024-08-28T10:44:19Z
    message: Created new replica set "py-serv-deployment-b896ff5b9"
    reason: NewReplicaSetCreated
    status: 'True'
    type: Progressing
  observedGeneration: 4
  readyReplicas: 1
  replicas: 1
  unavailableReplicas: 1



applied
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '4'
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"py-serv"},"name":"py-serv-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"py-serv"}},"template":{"metadata":{"labels":{"app":"py-serv"}},"spec":{"containers":[{"env":[{"name":"MIRRORD_FAKE_VAR_FIRST","value":"mirrord.is.running"},{"name":"MIRRORD_FAKE_VAR_SECOND","value":"7777"}],"image":"ghcr.io/metalbear-co/mirrord-pytest:latest","name":"py-serv","ports":[{"containerPort":80}]}]}}}}
  creationTimestamp: 2024-08-26T08:21:28Z
  generation: 4
  labels:
    app: py-serv
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    .: {}
                    f:name: {}
                  k:{"name":"MIRRORD_FAKE_VAR_SECOND"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":80,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: 2024-08-26T08:21:28Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                f:env:
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    f:value: {}
    manager: dupa
    operation: Update
    time: 2024-08-28T10:44:19Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:unavailableReplicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: 2024-08-28T10:44:19Z
  name: py-serv-deployment
  namespace: default
  resourceVersion: '69142'
  uid: b8dfd548-6e7e-46a8-a6ad-b9d8f1918b9c
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: py-serv
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: py-serv
    spec:
      containers:
      - env:
        - name: MIRRORD_FAKE_VAR_FIRST
          value: '2645284687'
        - name: MIRRORD_FAKE_VAR_SECOND
          value: '7777'
        image: ghcr.io/metalbear-co/mirrord-pytest:latest
        imagePullPolicy: Always
        name: py-serv
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2024-08-28T10:13:55Z
    lastUpdateTime: 2024-08-28T10:13:55Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: 'True'
    type: Available
  - lastTransitionTime: 2024-08-26T08:21:28Z
    lastUpdateTime: 2024-08-28T10:44:19Z
    message: ReplicaSet "py-serv-deployment-b896ff5b9" is progressing.
    reason: ReplicaSetUpdated
    status: 'True'
    type: Progressing
  observedGeneration: 4
  readyReplicas: 1
  replicas: 2
  unavailableReplicas: 1
  updatedReplicas: 1



applied
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '4'
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"py-serv"},"name":"py-serv-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"py-serv"}},"template":{"metadata":{"labels":{"app":"py-serv"}},"spec":{"containers":[{"env":[{"name":"MIRRORD_FAKE_VAR_FIRST","value":"mirrord.is.running"},{"name":"MIRRORD_FAKE_VAR_SECOND","value":"7777"}],"image":"ghcr.io/metalbear-co/mirrord-pytest:latest","name":"py-serv","ports":[{"containerPort":80}]}]}}}}
  creationTimestamp: 2024-08-26T08:21:28Z
  generation: 4
  labels:
    app: py-serv
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    .: {}
                    f:name: {}
                  k:{"name":"MIRRORD_FAKE_VAR_SECOND"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":80,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: 2024-08-26T08:21:28Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                f:env:
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    f:value: {}
    manager: dupa
    operation: Update
    time: 2024-08-28T10:44:19Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: 2024-08-28T10:44:22Z
  name: py-serv-deployment
  namespace: default
  resourceVersion: '69157'
  uid: b8dfd548-6e7e-46a8-a6ad-b9d8f1918b9c
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: py-serv
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: py-serv
    spec:
      containers:
      - env:
        - name: MIRRORD_FAKE_VAR_FIRST
          value: '2645284687'
        - name: MIRRORD_FAKE_VAR_SECOND
          value: '7777'
        image: ghcr.io/metalbear-co/mirrord-pytest:latest
        imagePullPolicy: Always
        name: py-serv
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 2
  conditions:
  - lastTransitionTime: 2024-08-28T10:13:55Z
    lastUpdateTime: 2024-08-28T10:13:55Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: 'True'
    type: Available
  - lastTransitionTime: 2024-08-26T08:21:28Z
    lastUpdateTime: 2024-08-28T10:44:22Z
    message: ReplicaSet "py-serv-deployment-b896ff5b9" is progressing.
    reason: ReplicaSetUpdated
    status: 'True'
    type: Progressing
  observedGeneration: 4
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 1



applied
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '4'
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"py-serv"},"name":"py-serv-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"py-serv"}},"template":{"metadata":{"labels":{"app":"py-serv"}},"spec":{"containers":[{"env":[{"name":"MIRRORD_FAKE_VAR_FIRST","value":"mirrord.is.running"},{"name":"MIRRORD_FAKE_VAR_SECOND","value":"7777"}],"image":"ghcr.io/metalbear-co/mirrord-pytest:latest","name":"py-serv","ports":[{"containerPort":80}]}]}}}}
  creationTimestamp: 2024-08-26T08:21:28Z
  generation: 4
  labels:
    app: py-serv
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    .: {}
                    f:name: {}
                  k:{"name":"MIRRORD_FAKE_VAR_SECOND"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":80,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: 2024-08-26T08:21:28Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"py-serv"}:
                f:env:
                  k:{"name":"MIRRORD_FAKE_VAR_FIRST"}:
                    f:value: {}
    manager: dupa
    operation: Update
    time: 2024-08-28T10:44:19Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: 2024-08-28T10:44:22Z
  name: py-serv-deployment
  namespace: default
  resourceVersion: '69164'
  uid: b8dfd548-6e7e-46a8-a6ad-b9d8f1918b9c
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: py-serv
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: py-serv
    spec:
      containers:
      - env:
        - name: MIRRORD_FAKE_VAR_FIRST
          value: '2645284687'
        - name: MIRRORD_FAKE_VAR_SECOND
          value: '7777'
        image: ghcr.io/metalbear-co/mirrord-pytest:latest
        imagePullPolicy: Always
        name: py-serv
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2024-08-28T10:13:55Z
    lastUpdateTime: 2024-08-28T10:13:55Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: 'True'
    type: Available
  - lastTransitionTime: 2024-08-26T08:21:28Z
    lastUpdateTime: 2024-08-28T10:44:22Z
    message: ReplicaSet "py-serv-deployment-b896ff5b9" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: 'True'
    type: Progressing
  observedGeneration: 4
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1



